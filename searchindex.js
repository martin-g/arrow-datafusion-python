Search.setIndex({"docnames": ["api", "api/config", "api/dataframe", "api/execution_context", "api/expression", "api/functions", "api/object_store", "generated/datafusion.Config", "generated/datafusion.DataFrame", "generated/datafusion.Expression", "generated/datafusion.SessionContext", "generated/datafusion.functions.functions", "generated/datafusion.object_store.object_store", "index"], "filenames": ["api.rst", "api/config.rst", "api/dataframe.rst", "api/execution_context.rst", "api/expression.rst", "api/functions.rst", "api/object_store.rst", "generated/datafusion.Config.rst", "generated/datafusion.DataFrame.rst", "generated/datafusion.Expression.rst", "generated/datafusion.SessionContext.rst", "generated/datafusion.functions.functions.rst", "generated/datafusion.object_store.object_store.rst", "index.rst"], "titles": ["API Reference", "Config", "DataFrame", "SessionContext", "Expression", "Functions", "ObjectStore", "datafusion.Config", "datafusion.DataFrame", "datafusion.Expression", "datafusion.SessionContext", "datafusion.functions.functions", "datafusion.object_store.object_store", "DataFusion in Python"], "terms": {"config": [0, 13], "datafus": 0, "datafram": [0, 9, 13], "sessioncontext": [0, 13], "express": [0, 11, 13], "function": [0, 13], "objectstor": [0, 13], "object_stor": 0, "class": [7, 8, 9, 10, 12, 13], "base": [7, 8, 9, 10, 12], "object": [7, 8, 9, 10, 12], "__init__": [7, 8, 9, 10, 13], "method": [7, 8, 9, 10], "static": [7, 9], "from_env": 7, "get": 7, "configur": 7, "from": [7, 8, 9, 11], "environ": [7, 8, 13], "variabl": 7, "option": 7, "get_al": 7, "all": [7, 8, 11], "set": [7, 11], "A": 8, "pydatafram": [8, 10], "i": [8, 10, 11, 13], "represent": [8, 11], "logic": 8, "plan": [8, 10, 13], "an": [8, 9, 10, 11], "api": 8, "compos": 8, "statement": [8, 10, 13], "us": [8, 9, 11], "build": [8, 13], "collect": [8, 13], "execut": [8, 10, 13], "result": [8, 11, 13], "The": [8, 11, 13], "actual": 8, "run": [8, 13], "nativ": 8, "rust": [8, 13], "arrow": [8, 13], "multi": [8, 10, 13], "thread": [8, 10, 13], "aggreg": [8, 13], "cach": 8, "return": [8, 10, 11, 13], "list": 8, "recordbatch": [8, 13], "e": 8, "unless": 8, "some": 8, "order": [8, 11], "specifi": [8, 11], "guarante": 8, "collect_partit": 8, "thi": [8, 11, 13], "vector": 8, "maintain": 8, "input": 8, "partit": 8, "distinct": 8, "filter": 8, "out": 8, "duplic": 8, "row": 8, "except_al": 8, "calcul": 8, "except": 8, "two": 8, "": [8, 11], "must": [8, 11], "have": [8, 13], "exactli": 8, "same": [8, 11], "schema": 8, "explain": 8, "print": 8, "queri": [8, 13], "intersect": 8, "join": 8, "limit": 8, "repartit": 8, "scheme": 8, "repartition_by_hash": 8, "select": [8, 13], "select_column": 8, "show": 8, "20": 8, "line": 8, "default": [8, 11], "sort": [8, 9, 11], "union": 8, "preserv": 8, "union_distinct": 8, "with_column": 8, "with_column_renam": 8, "renam": 8, "one": [8, 11], "column": [8, 9, 13], "appli": 8, "new": [8, 11, 13], "project": 8, "op": 8, "doe": 8, "exist": [8, 9], "write_csv": 8, "write": 8, "csv": [8, 13], "file": [8, 13], "write_json": 8, "json": 8, "write_parquet": 8, "parquet": [8, 13], "pyexpr": 9, "can": [9, 13], "alia": [9, 11], "assign": 9, "name": [9, 10, 13], "cast": 9, "is_nul": [9, 13], "liter": 9, "creat": [9, 11, 13], "pysessioncontext": 10, "abl": 10, "It": [10, 13], "ha": 10, "power": 10, "optim": 10, "physic": 10, "planner": 10, "local": 10, "engin": [10, 13], "perform": 10, "catalog": 10, "create_datafram": [10, 13], "deregister_t": 10, "empty_t": 10, "read_avro": 10, "read_csv": 10, "read_json": 10, "read_parquet": 10, "register_csv": [10, 13], "register_dataset": 10, "register_object_stor": 10, "regist": [10, 13], "store": [10, 13], "given": [10, 11], "register_parquet": 10, "register_record_batch": 10, "register_t": 10, "register_udaf": 10, "register_udf": 10, "session_id": 10, "sql": [10, 13], "whose": 10, "correspond": [10, 11], "tabl": [10, 13], "table_exist": 10, "ab": 11, "aco": 11, "approx_distinct": 11, "arrai": [11, 13], "ascii": 11, "numer": 11, "code": [11, 13], "first": [11, 13], "charact": 11, "argument": 11, "In": 11, "utf8": 11, "encod": 11, "unicod": 11, "point": 11, "other": [11, 13], "multibyt": 11, "asin": 11, "atan": 11, "avg": 11, "bit_length": 11, "number": 11, "bit": 11, "string": 11, "8": [11, 13], "time": 11, "octet_length": 11, "btrim": 11, "remov": 11, "longest": 11, "contain": 11, "onli": [11, 13], "space": 11, "start": 11, "end": 11, "ceil": 11, "character_length": 11, "chr": 11, "concat": 11, "concaten": 11, "text": 11, "null": 11, "ar": 11, "ignor": 11, "concat_w": 11, "separ": 11, "should": 11, "co": 11, "count": 11, "digest": 11, "comput": [11, 13], "binari": 11, "hash": [11, 13], "data": [11, 13], "type": 11, "algorithm": 11, "standard": 11, "md5": 11, "sha224": 11, "sha256": 11, "sha384": 11, "sha512": 11, "blake2": 11, "blake2b": 11, "blake3": 11, "exp": 11, "floor": 11, "in_list": 11, "initcap": 11, "convert": 11, "letter": 11, "each": 11, "word": 11, "upper": 11, "case": 11, "rest": 11, "lower": 11, "sequenc": 11, "alphanumer": 11, "non": 11, "left": 11, "n": 11, "when": [11, 13], "neg": 11, "last": 11, "ln": 11, "log10": 11, "log2": 11, "lpad": 11, "extend": 11, "length": 11, "prepend": 11, "fill": 11, "If": 11, "alreadi": 11, "longer": 11, "than": 11, "truncat": 11, "right": 11, "ltrim": 11, "max": 11, "written": [11, 13], "hexadecim": 11, "min": 11, "now": 11, "current": 11, "date": 11, "byte": 11, "sinc": [11, 13], "version": 11, "accept": 11, "directli": 11, "strip": 11, "trail": 11, "order_bi": 11, "random": 11, "valu": [11, 13], "rang": 11, "0": [11, 13], "x": 11, "1": [11, 13], "regexp_match": 11, "regexp_replac": 11, "replac": 11, "substr": 11, "match": 11, "posix": 11, "regular": 11, "repeat": 11, "occurr": 11, "revers": 11, "round": 11, "rpad": 11, "append": 11, "rtrim": 11, "signum": 11, "sin": 11, "split_part": 11, "split": 11, "delimit": 11, "th": 11, "field": 11, "sqrt": 11, "starts_with": 11, "true": 11, "prefix": 11, "strpo": 11, "index": 11, "within": 11, "zero": [11, 13], "present": 11, "posit": 11, "note": 11, "sum": [11, 13], "tan": 11, "to_hex": 11, "its": [11, 13], "equival": 11, "to_timestamp": 11, "translat": 11, "extra": 11, "delet": 11, "trim": 11, "both": 11, "trunc": 11, "window": 11, "amazons3": 12, "googlecloud": 12, "localfilesystem": 12, "microsoftazur": 12, "librari": 13, "bind": 13, "apach": 13, "memori": 13, "like": 13, "pyspark": 13, "allow": 13, "you": 13, "through": 13, "against": 13, "obtain": 13, "back": 13, "also": 13, "complex": 13, "oper": 13, "major": 13, "advantag": 13, "over": 13, "achiev": 13, "copi": 13, "between": 13, "cost": 13, "apart": 13, "lock": 13, "gil": 13, "those": 13, "Its": 13, "which": 13, "make": 13, "strong": 13, "assumpt": 13, "about": 13, "safeti": 13, "lack": 13, "leak": 13, "technic": 13, "via": 13, "c": 13, "interfac": 13, "simpl": 13, "usag": 13, "import": 13, "col": 13, "pyarrow": 13, "context": 13, "ctx": 13, "batch": 13, "from_arrai": 13, "2": 13, "3": 13, "4": 13, "5": 13, "6": 13, "b": 13, "df": 13, "assert": 13, "7": 13, "9": 13, "we": 13, "echo": 13, "n1": 13, "n2": 13, "n3": 13, "exampl": 13, "And": 13, "def": 13, "is_null_arr": 13, "int64": 13, "bool_": 13, "stabl": 13, "fals": 13, "accumul": 13, "myaccumul": 13, "user": 13, "defin": 13, "self": 13, "_sum": 13, "scalar": 13, "none": 13, "nice": 13, "t": 13, "yet": 13, "break": 13, "as_pi": 13, "merg": 13, "state": 13, "evalu": 13, "my_udaf": 13, "float64": 13, "verifi": 13, "__version__": 13, "assum": 13, "cargo": 13, "workflow": 13, "recommend": 13, "pyo3": 13, "maturin": 13, "bootstrap": 13, "fetch": 13, "repo": 13, "git": 13, "clone": 13, "github": 13, "com": 13, "prepar": 13, "wheel": 13, "python3": 13, "m": 13, "venv": 13, "activ": 13, "sourc": 13, "bin": 13, "itself": 13, "necessari": 13, "u": 13, "r": 13, "requir": 13, "310": 13, "txt": 13, "test": 13, "reli": 13, "submodul": 13, "init": 13, "whenev": 13, "chang": 13, "your": 13, "pull": 13, "sure": 13, "pytest": 13, "To": 13, "tool": 13, "done": 13, "onc": 13, "consid": 13, "piptool": 13, "compil": 13, "gener": 13, "o": 13, "more": 13, "detail": 13, "here": 13}, "objects": {"datafusion": [[7, 0, 1, "", "Config"], [8, 0, 1, "", "DataFrame"], [9, 0, 1, "", "Expression"], [10, 0, 1, "", "SessionContext"]], "datafusion.Config": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "from_env"], [7, 1, 1, "", "get"], [7, 1, 1, "", "get_all"], [7, 1, 1, "", "set"]], "datafusion.DataFrame": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "aggregate"], [8, 1, 1, "", "cache"], [8, 1, 1, "", "collect"], [8, 1, 1, "", "collect_partitioned"], [8, 1, 1, "", "distinct"], [8, 1, 1, "", "except_all"], [8, 1, 1, "", "explain"], [8, 1, 1, "", "filter"], [8, 1, 1, "", "intersect"], [8, 1, 1, "", "join"], [8, 1, 1, "", "limit"], [8, 1, 1, "", "repartition"], [8, 1, 1, "", "repartition_by_hash"], [8, 1, 1, "", "schema"], [8, 1, 1, "", "select"], [8, 1, 1, "", "select_columns"], [8, 1, 1, "", "show"], [8, 1, 1, "", "sort"], [8, 1, 1, "", "union"], [8, 1, 1, "", "union_distinct"], [8, 1, 1, "", "with_column"], [8, 1, 1, "", "with_column_renamed"], [8, 1, 1, "", "write_csv"], [8, 1, 1, "", "write_json"], [8, 1, 1, "", "write_parquet"]], "datafusion.Expression": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "alias"], [9, 1, 1, "", "cast"], [9, 1, 1, "", "column"], [9, 1, 1, "", "is_null"], [9, 1, 1, "", "literal"], [9, 1, 1, "", "sort"]], "datafusion.SessionContext": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "catalog"], [10, 1, 1, "", "create_dataframe"], [10, 1, 1, "", "deregister_table"], [10, 1, 1, "", "empty_table"], [10, 1, 1, "", "read_avro"], [10, 1, 1, "", "read_csv"], [10, 1, 1, "", "read_json"], [10, 1, 1, "", "read_parquet"], [10, 1, 1, "", "register_csv"], [10, 1, 1, "", "register_dataset"], [10, 1, 1, "", "register_object_store"], [10, 1, 1, "", "register_parquet"], [10, 1, 1, "", "register_record_batches"], [10, 1, 1, "", "register_table"], [10, 1, 1, "", "register_udaf"], [10, 1, 1, "", "register_udf"], [10, 1, 1, "", "session_id"], [10, 1, 1, "", "sql"], [10, 1, 1, "", "table"], [10, 1, 1, "", "table_exist"], [10, 1, 1, "", "tables"]], "datafusion.functions": [[11, 2, 0, "-", "functions"]], "datafusion.functions.functions": [[11, 3, 1, "", "abs"], [11, 3, 1, "", "acos"], [11, 3, 1, "", "alias"], [11, 3, 1, "", "approx_distinct"], [11, 3, 1, "", "array"], [11, 3, 1, "", "ascii"], [11, 3, 1, "", "asin"], [11, 3, 1, "", "atan"], [11, 3, 1, "", "avg"], [11, 3, 1, "", "bit_length"], [11, 3, 1, "", "btrim"], [11, 3, 1, "", "ceil"], [11, 3, 1, "", "character_length"], [11, 3, 1, "", "chr"], [11, 3, 1, "", "concat"], [11, 3, 1, "", "concat_ws"], [11, 3, 1, "", "cos"], [11, 3, 1, "", "count"], [11, 3, 1, "", "digest"], [11, 3, 1, "", "exp"], [11, 3, 1, "", "floor"], [11, 3, 1, "", "in_list"], [11, 3, 1, "", "initcap"], [11, 3, 1, "", "left"], [11, 3, 1, "", "ln"], [11, 3, 1, "", "log10"], [11, 3, 1, "", "log2"], [11, 3, 1, "", "lower"], [11, 3, 1, "", "lpad"], [11, 3, 1, "", "ltrim"], [11, 3, 1, "", "max"], [11, 3, 1, "", "md5"], [11, 3, 1, "", "min"], [11, 3, 1, "", "now"], [11, 3, 1, "", "octet_length"], [11, 3, 1, "", "order_by"], [11, 3, 1, "", "random"], [11, 3, 1, "", "regexp_match"], [11, 3, 1, "", "regexp_replace"], [11, 3, 1, "", "repeat"], [11, 3, 1, "", "replace"], [11, 3, 1, "", "reverse"], [11, 3, 1, "", "right"], [11, 3, 1, "", "round"], [11, 3, 1, "", "rpad"], [11, 3, 1, "", "rtrim"], [11, 3, 1, "", "sha224"], [11, 3, 1, "", "sha256"], [11, 3, 1, "", "sha384"], [11, 3, 1, "", "sha512"], [11, 3, 1, "", "signum"], [11, 3, 1, "", "sin"], [11, 3, 1, "", "split_part"], [11, 3, 1, "", "sqrt"], [11, 3, 1, "", "starts_with"], [11, 3, 1, "", "strpos"], [11, 3, 1, "", "substr"], [11, 3, 1, "", "sum"], [11, 3, 1, "", "tan"], [11, 3, 1, "", "to_hex"], [11, 3, 1, "", "to_timestamp"], [11, 3, 1, "", "translate"], [11, 3, 1, "", "trim"], [11, 3, 1, "", "trunc"], [11, 3, 1, "", "upper"], [11, 3, 1, "", "window"]], "datafusion.object_store": [[12, 2, 0, "-", "object_store"]], "datafusion.object_store.object_store": [[12, 0, 1, "", "AmazonS3"], [12, 0, 1, "", "GoogleCloud"], [12, 0, 1, "", "LocalFileSystem"], [12, 0, 1, "", "MicrosoftAzure"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": [0, 13], "refer": [0, 13], "config": [1, 7], "datafram": [2, 8], "sessioncontext": [3, 10], "express": [4, 9], "function": [5, 11], "objectstor": 6, "datafus": [7, 8, 9, 10, 11, 12, 13], "object_stor": 12, "python": 13, "how": 13, "us": 13, "udf": 13, "udaf": 13, "instal": 13, "from": 13, "pip": 13, "develop": 13, "updat": 13, "depend": 13}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Config": [[1, "config"]], "DataFrame": [[2, "dataframe"]], "SessionContext": [[3, "sessioncontext"]], "Expression": [[4, "expression"]], "Functions": [[5, "functions"]], "ObjectStore": [[6, "objectstore"]], "datafusion.Config": [[7, "datafusion-config"]], "datafusion.DataFrame": [[8, "datafusion-dataframe"]], "datafusion.Expression": [[9, "datafusion-expression"]], "datafusion.SessionContext": [[10, "datafusion-sessioncontext"]], "datafusion.functions.functions": [[11, "module-datafusion.functions.functions"]], "datafusion.object_store.object_store": [[12, "module-datafusion.object_store.object_store"]], "DataFusion in Python": [[13, "datafusion-in-python"]], "How to use it": [[13, "how-to-use-it"]], "UDFs": [[13, "udfs"]], "UDAF": [[13, "udaf"]], "How to install (from pip)": [[13, "how-to-install-from-pip"]], "How to develop": [[13, "how-to-develop"]], "How to update dependencies": [[13, "how-to-update-dependencies"]], "API reference": [[13, "api-reference"]]}, "indexentries": {"config (class in datafusion)": [[7, "datafusion.Config"]], "__init__() (datafusion.config method)": [[7, "datafusion.Config.__init__"]], "from_env() (datafusion.config static method)": [[7, "datafusion.Config.from_env"]], "get() (datafusion.config method)": [[7, "datafusion.Config.get"]], "get_all() (datafusion.config method)": [[7, "datafusion.Config.get_all"]], "set() (datafusion.config method)": [[7, "datafusion.Config.set"]], "dataframe (class in datafusion)": [[8, "datafusion.DataFrame"]], "__init__() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.__init__"]], "aggregate() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.aggregate"]], "cache() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.cache"]], "collect() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.collect"]], "collect_partitioned() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.collect_partitioned"]], "distinct() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.distinct"]], "except_all() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.except_all"]], "explain() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.explain"]], "filter() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.filter"]], "intersect() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.intersect"]], "join() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.join"]], "limit() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.limit"]], "repartition() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.repartition"]], "repartition_by_hash() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.repartition_by_hash"]], "schema() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.schema"]], "select() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.select"]], "select_columns() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.select_columns"]], "show() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.show"]], "sort() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.sort"]], "union() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.union"]], "union_distinct() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.union_distinct"]], "with_column() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.with_column"]], "with_column_renamed() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.with_column_renamed"]], "write_csv() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.write_csv"]], "write_json() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.write_json"]], "write_parquet() (datafusion.dataframe method)": [[8, "datafusion.DataFrame.write_parquet"]], "expression (class in datafusion)": [[9, "datafusion.Expression"]], "__init__() (datafusion.expression method)": [[9, "datafusion.Expression.__init__"]], "alias() (datafusion.expression method)": [[9, "datafusion.Expression.alias"]], "cast() (datafusion.expression method)": [[9, "datafusion.Expression.cast"]], "column() (datafusion.expression static method)": [[9, "datafusion.Expression.column"]], "is_null() (datafusion.expression method)": [[9, "datafusion.Expression.is_null"]], "literal() (datafusion.expression static method)": [[9, "datafusion.Expression.literal"]], "sort() (datafusion.expression method)": [[9, "datafusion.Expression.sort"]], "sessioncontext (class in datafusion)": [[10, "datafusion.SessionContext"]], "__init__() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.__init__"]], "catalog() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.catalog"]], "create_dataframe() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.create_dataframe"]], "deregister_table() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.deregister_table"]], "empty_table() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.empty_table"]], "read_avro() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.read_avro"]], "read_csv() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.read_csv"]], "read_json() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.read_json"]], "read_parquet() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.read_parquet"]], "register_csv() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_csv"]], "register_dataset() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_dataset"]], "register_object_store() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_object_store"]], "register_parquet() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_parquet"]], "register_record_batches() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_record_batches"]], "register_table() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_table"]], "register_udaf() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_udaf"]], "register_udf() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_udf"]], "session_id() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.session_id"]], "sql() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.sql"]], "table() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.table"]], "table_exist() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.table_exist"]], "tables() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.tables"]], "abs() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.abs"]], "acos() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.acos"]], "alias() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.alias"]], "approx_distinct() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.approx_distinct"]], "array() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.array"]], "ascii() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.ascii"]], "asin() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.asin"]], "atan() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.atan"]], "avg() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.avg"]], "bit_length() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.bit_length"]], "btrim() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.btrim"]], "ceil() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.ceil"]], "character_length() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.character_length"]], "chr() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.chr"]], "concat() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.concat"]], "concat_ws() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.concat_ws"]], "cos() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.cos"]], "count() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.count"]], "datafusion.functions.functions": [[11, "module-datafusion.functions.functions"]], "digest() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.digest"]], "exp() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.exp"]], "floor() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.floor"]], "in_list() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.in_list"]], "initcap() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.initcap"]], "left() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.left"]], "ln() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.ln"]], "log10() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.log10"]], "log2() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.log2"]], "lower() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.lower"]], "lpad() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.lpad"]], "ltrim() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.ltrim"]], "max() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.max"]], "md5() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.md5"]], "min() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.min"]], "module": [[11, "module-datafusion.functions.functions"], [12, "module-datafusion.object_store.object_store"]], "now() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.now"]], "octet_length() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.octet_length"]], "order_by() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.order_by"]], "random() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.random"]], "regexp_match() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.regexp_match"]], "regexp_replace() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.regexp_replace"]], "repeat() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.repeat"]], "replace() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.replace"]], "reverse() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.reverse"]], "right() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.right"]], "round() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.round"]], "rpad() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.rpad"]], "rtrim() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.rtrim"]], "sha224() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sha224"]], "sha256() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sha256"]], "sha384() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sha384"]], "sha512() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sha512"]], "signum() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.signum"]], "sin() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sin"]], "split_part() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.split_part"]], "sqrt() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sqrt"]], "starts_with() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.starts_with"]], "strpos() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.strpos"]], "substr() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.substr"]], "sum() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sum"]], "tan() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.tan"]], "to_hex() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.to_hex"]], "to_timestamp() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.to_timestamp"]], "translate() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.translate"]], "trim() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.trim"]], "trunc() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.trunc"]], "upper() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.upper"]], "window() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.window"]], "amazons3 (class in datafusion.object_store.object_store)": [[12, "datafusion.object_store.object_store.AmazonS3"]], "googlecloud (class in datafusion.object_store.object_store)": [[12, "datafusion.object_store.object_store.GoogleCloud"]], "localfilesystem (class in datafusion.object_store.object_store)": [[12, "datafusion.object_store.object_store.LocalFileSystem"]], "microsoftazure (class in datafusion.object_store.object_store)": [[12, "datafusion.object_store.object_store.MicrosoftAzure"]], "datafusion.object_store.object_store": [[12, "module-datafusion.object_store.object_store"]]}})